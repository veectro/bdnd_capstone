// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var Verifier = artifacts.require('./Verifier');

// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps
var Proof = require('../../zokrates/code/square/proof.json');

contract('Verifier', accounts => {

    const account_one = accounts[0];

    describe('Verifier test', function () {
        beforeEach(async function () {
            this.contract = await Verifier.new({from: account_one});
        })

        it('Tests verification with correct proof', async function () {
            let isVerified = await this.contract.verifyTx.call(
                Proof.proof.a,
                Proof.proof.b,
                Proof.proof.c,
                Proof.inputs
            );

            assert.equal(isVerified, true, "Error into verify proof");
        });

        // Test verification with incorrect proof
        it('Tests verification with incorrect proof', async function () {
            let isVerified = await this.contract.verifyTx.call(
                Proof.proof.a,
                Proof.proof.b,
                Proof.proof.c,
                [10, 5]
            );

            assert.equal(isVerified, false, "Error into verify proof");
        });
    })

})


